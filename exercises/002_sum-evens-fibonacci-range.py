"""
https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""


# 002a || 2016-08-02 || define Fibonacci constructor separately; define summation of selected terms separately
def fib_constr(limit, a=0, b=1):
    fib_seq = [a, b]
    while a + b < limit:
        a, b = b, (a + b)
        fib_seq.append(b)
    return fib_seq


def sum_divisible(terms, div_by):
    return sum([x for x in terms if x % div_by == 0])

# Fibonacci term limit is 4,000,000 as dictated by exercise
fib_sum_evens = sum_divisible(fib_constr(4000000), 2)
print(fib_sum_evens)
